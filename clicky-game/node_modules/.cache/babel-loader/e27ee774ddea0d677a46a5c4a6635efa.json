{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klee5\\\\Desktop\\\\Homework Assignment 15\\\\clicky-game\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport MatchCard from \"./components/MatchCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport matches from \"./matchcards.json\";\nimport \"./App.css\";\nlet correctGuesses = 0;\nlet bestScore = 0;\nlet clickMessage = \"Welcome to Winter Olympic Mascot clicky! Click same picture twice, you lose!\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      matches,\n      correctGuesses,\n      bestScore,\n      message: \"Welcome to my app!\",\n      cards: []\n    };\n\n    this.setClicked = id => {\n      const matches = this.state.matches;\n      const clickedMatch = matches.filter(match => match.id === id);\n\n      if (clickedMatch[0].clicked) {\n        console.log(\"Correct Guesses: \" + correctGuesses);\n        console.log(\"Best Score: \" + bestScore);\n        correctGuesses = 0;\n        clickMessage = \"Uh-oh! You already clicked this group of mascot!\";\n\n        for (let i = 0; i < matches.length; i++) {\n          matches[i].clicked = false;\n        }\n\n        this.setState({\n          clickMessage\n        });\n        this.setState({\n          correctGuesses\n        });\n        this.setState({\n          matches\n        });\n      } else if (correctGuesses < 11) {\n        clickedMatch[0].clicked = true;\n        correctGuesses++;\n        clickMessage = \"Great! You didn't click that on yet! Keep going until the end!\";\n\n        if (correctGuesses > bestScore) {\n          bestScore = correctGuesses;\n          this.setstate({\n            bestScore\n          });\n        }\n\n        matches.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        this.setState({\n          matches\n        });\n        this.setState({\n          correctGuesses\n        });\n        this.setState({\n          clickMessage\n        });\n      } else {\n        clickedMatch[0].clicked = true;\n        correctGuesses = 0;\n        clickMessage = \"Perfect! You got them all! Let's ENCORE the game!\";\n        bestScore = 12;\n        this.setState({\n          bestScore\n        });\n\n        for (let i = 0; i < matches.length; i++) {\n          matches[i].clicked = false;\n        }\n\n        matches.sort(function (a, b) {\n          return 0.5 - Math.random();\n        });\n        this.setState({\n          matches\n        });\n        this.setState({\n          correctGuesses\n        });\n        this.setState({\n          clickMessage\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, \"Winter Olympic Mascot Game\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"scoreSummary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, this.state.clickMessage), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"scoreSummary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, \"Correct Guesses: \", this.state.corrctGuesses, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), \"Best Score: \", this.state.bestScore), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, this.state.matches.map(match => /*#__PURE__*/React.createElement(MatchCard, {\n      setClicked: this.setClicked,\n      id: match.id,\n      key: match.id,\n      image: match.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/klee5/Desktop/Homework Assignment 15/clicky-game/src/App.js"],"names":["React","Component","MatchCard","Wrapper","Title","matches","correctGuesses","bestScore","clickMessage","App","state","message","cards","setClicked","id","clickedMatch","filter","match","clicked","console","log","i","length","setState","setstate","sort","a","b","Math","random","render","corrctGuesses","map","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MatchCard from \"./components/MatchCard\"\nimport Wrapper from \"./components/Wrapper\"\nimport Title from \"./components/Title\"\nimport matches from \"./matchcards.json\";\nimport \"./App.css\";\n\nlet correctGuesses = 0;\nlet bestScore = 0;\nlet clickMessage = \"Welcome to Winter Olympic Mascot clicky! Click same picture twice, you lose!\";\n\n\n\nclass App extends Component {\n  state = {\n    matches,\n    correctGuesses,\n    bestScore,\n    message: \"Welcome to my app!\",\n    cards: [],\n  };\n\n  setClicked = id => {\n    \n    const matches = this.state.matches;\n\n    const clickedMatch = matches.filter(match => match.id === id);\n\n    if (clickedMatch[0].clicked){\n\n      console.log (\"Correct Guesses: \" + correctGuesses);\n      console.log((\"Best Score: \" + bestScore));\n\n      correctGuesses = 0;\n      clickMessage = \"Uh-oh! You already clicked this group of mascot!\"\n\n      for (let i=0 ; i <matches.length ; i++){\n        matches[i].clicked = false;\n      }\n\n      this.setState({clickMessage});\n      this.setState({ correctGuesses });\n      this.setState({matches});\n\n} else if (correctGuesses < 11) {\n\n  clickedMatch[0].clicked = true;\n\n  correctGuesses++;\n\n  clickMessage = \"Great! You didn't click that on yet! Keep going until the end!\"\n\n  if (correctGuesses > bestScore){\n    bestScore = correctGuesses;\n    this.setstate({ bestScore});\n  }\n\n  matches.sort(function(a, b){return 0.5 - Math.random()});\n\n  this.setState({ matches });\n  this.setState({ correctGuesses });\n  this.setState({ clickMessage });\n} else {\n\n  clickedMatch[0].clicked = true;\n\n  correctGuesses = 0;\n\n  clickMessage = \"Perfect! You got them all! Let's ENCORE the game!\"\n  bestScore = 12;\n  this.setState({ bestScore });\n\n  for (let i=0; i <matches.length;  i++){\n    matches[i].clicked = false;\n  }\n\n  matches.sort(function(a,b){return 0.5 - Math.random()});\n\n  this.setState({ matches });\n  this.setState({correctGuesses});\n  this.setState({clickMessage});\n}\n  \n\n  };\n\n  \nrender() {\n  \n    return (\n      <Wrapper>\n      <Title>Winter Olympic Mascot Game</Title>\n\n      <h3 className = \"scoreSummary\">\n        {this.state.clickMessage}\n      </h3>\n\n      <h3 className = \"scoreSummary\">\n        Correct Guesses: {this.state.corrctGuesses}\n        <br />\n        Best Score: {this.state.bestScore}\n      </h3>\n\n      <div className = \"container\">\n      <div className = \"row\">\n      {this.state.matches.map(match => (\n                    <MatchCard\n                        setClicked={this.setClicked}\n                        id={match.id}\n                        key={match.id}\n                        image={match.image}\n                    />\n                ))}\n        </div>\n      </div>\n      </Wrapper>\n    );\n      }\n    }\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}